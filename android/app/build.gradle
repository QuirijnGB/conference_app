def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException('Flutter SDK not found. Define location with flutter.sdk in the local.properties file.')
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def loadSigningConfiguration(String name) {
    def propertiesFile = project.file("signing/${name}.properties") as File
    if (!propertiesFile.exists()) {
        throw new FileNotFoundException("""The properties file ${propertiesFile.absolutePath} is missing, 
did you remember to add the signing configuration to the project for ${name}?

Please refer to the readme for further instructions.""")
    }

    def properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    return properties
}

def getKeystore(String fileName) {
    def keystoreFile = file("signing/${fileName}") as File
    if (!keystoreFile.exists()) {
        throw new FileNotFoundException("""The keystore file ${keystoreFile.absolutePath} is missing, 
but the signing configuration for the current build variant specifies it as the storeFile.
Did you remember to add the keystore to the project for this build variant?

Please refer to the readme for further instructions.""")
    }
    return keystoreFile
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.2'

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId 'com.yourcompany.dartconf'
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName '1.0'
    }

    signingConfigs {
        debug {
            def debugKeystore = loadSigningConfiguration('debug')
            storeFile getKeystore(debugKeystore['storeFile'])
            storePassword debugKeystore['storePassword']
            keyAlias debugKeystore['keyAlias']
            keyPassword debugKeystore['keyPassword']
        }
        release {
            def debugKeystore = loadSigningConfiguration('release')
            storeFile getKeystore(debugKeystore['storeFile'])
            storePassword debugKeystore['storePassword']
            keyAlias debugKeystore['keyAlias']
            keyPassword debugKeystore['keyPassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

apply plugin: 'com.google.gms.google-services'
